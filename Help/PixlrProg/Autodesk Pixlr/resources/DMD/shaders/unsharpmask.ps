////////////////////////////////////////////////////////////////////////////////
// Filename: unsharpmask.ps
////////////////////////////////////////////////////////////////////////////////

/////////////
// GLOBALS //
/////////////

Texture2D shaderTexture;
Texture2D blurredTexture;
SamplerState SampleType;

/////////////
// GLOBALS //
/////////////
cbuffer TextureBuffer
{
	float uAmount;
	float3 padding;
};

//////////////
// TYPEDEFS //
//////////////
struct PixelInputType
{
    float4 position : SV_POSITION;
    float2 tex : TEXCOORD0;
};

////////////////////////////////////////////////////////////////////////////////
// Pixel Shader
////////////////////////////////////////////////////////////////////////////////
float4 TexturePixelShader(PixelInputType input) : SV_TARGET
{
	float4 textureColor;
    // Sample the pixel color from the texture using the sampler at this texture coordinate location.
    textureColor = shaderTexture.Sample(SampleType, input.tex);

	//for premultiplied image
	if(textureColor.a != 0.0) textureColor.rgb /= textureColor.a;
	
	float4 blurColor = blurredTexture.Sample(SampleType, input.tex);

	float4 result = lerp(blurColor, textureColor, 1.0 + uAmount);

	result.rgb = clamp(result.rgb, 0.0, 1.0);

	//for premultiplied image
	result.rgb *= result.a;

	return result;
}
