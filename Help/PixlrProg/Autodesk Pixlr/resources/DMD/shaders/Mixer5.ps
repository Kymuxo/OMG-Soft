////////////////////////////////////////////////////////////////////////////////
// Filename: Texture.ps
////////////////////////////////////////////////////////////////////////////////

/////////////
// GLOBALS //
/////////////
cbuffer TextureBuffer
{
	float scale_width;
	float scale_height;
	float intensity;
	float padding;
};


Texture2D Texture1;
Texture2D Texture2;
SamplerState SampleType;


//////////////
// TYPEDEFS //
//////////////
struct PixelInputType
{
    float4 position : SV_POSITION;
    float2 tex : TEXCOORD0;
};

////////////////////////////////////////////////////////////////////////////////
// Pixel Shader
////////////////////////////////////////////////////////////////////////////////
float4 TexturePixelShader(PixelInputType input) : SV_TARGET
{
    float4 c = Texture1.Sample(SampleType, input.tex);
	float4 e = Texture2.Sample(SampleType, input.tex);
	float4 r = 0.5 * (e + c);

	return float4(r.rgb * r.a, r.a);
}
